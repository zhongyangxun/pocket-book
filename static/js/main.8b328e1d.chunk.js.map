{"version":3,"sources":["components/BillList/Item.tsx","components/Header/header.tsx","components/Loading/loading.tsx","components/Nodata/noData.tsx","util.ts","components/BillList/BillLlist.tsx","api/bill.ts","api/config.ts","components/CategorySelect/categorySelect.tsx","context.ts","components/Filter/filter.tsx","components/Transition/transiton.tsx","components/Modal/mask.tsx","components/Modal/modal.tsx","components/Message/index.tsx","components/BillForm/billForm.tsx","components/Message/msg.tsx","components/BillAdder/billAdder.tsx","components/Summary/summary.tsx","components/ToolBar/toolBar.tsx","App.tsx","index.tsx"],"names":["BillType","Header","className","BillItem","props","type","time","category","amount","sign","Income","toFixed","Loading","text","defaultProps","NoData","icon","faInbox","size","formatDate","date","hasDay","year","getFullYear","month","getMonth","padStart","day","getDate","join","formatMonth","BillList","list","loading","data-testid","length","map","item","key","id","parseFloat","categoryName","Date","BillBaseUrl","getBillList","params","axios","get","CategorySelect","placeholderText","billType","restProps","useState","cateList","setCateList","useEffect","then","res","data","catch","err","window","console","error","value","name","BillContext","createContext","Filter","classes","classNames","context","useContext","changeMonth","changeCategory","handleFormChange","parmas","getTime","undefined","htmlFor","onChange","showMonthYearPicker","maxDate","e","target","disabled","Transition","children","animation","wrapper","nodeRef","React","useRef","CSSTransition","ref","unmountOnExit","appear","Mask","visible","ReactDOM","createPortal","in","timeout","document","body","Modal","closable","title","cancelText","okText","showFooter","modalSize","center","onOk","onCancel","classList","add","remove","modalClosable","styles","display","pointerEvents","handleCancel","modalClasses","dialogClasses","style","onClick","BillForm","onFinish","onFail","form","setForm","formErr","setFormErr","setLoading","handleChange","currentTarget","test","handleFocus","onSubmit","preventDefault","passValidate","Object","values","some","errMsg","entries","forEach","prevFormErr","validate","post","finally","noValidate","onFocus","required","Message","messageType","messageIcon","faCheckCircle","faTimesCircle","faExclamationCircle","faInfoCircle","renderIcon","seed","now","getUuid","MessageContainer","notices","setNotices","notice","prevNotices","filter","itemKey","setTimeout","firstNotice","TransitionGroup","el","querySelector","createElement","append","render","api","info","success","warning","BillAdder","showModal","setShowModal","prevShowModal","faPlus","message","Expenditure","Summary","summary","income","expenditure","incomeAmount","expenditureAmount","sum","sumStr","ToolBar","App","setList","setCategory","nowMonth","setMonth","setSummary","passedContext","billList","typeSummary","Provider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b328e1d.chunk.js","sourcesContent":["import React, { FC } from 'react'\n\nexport enum BillType {\n  Income = '1',\n  Expenditure = '0'\n}\n\nexport interface BillItemProps {\n  type: BillType;\n  time: number | string;\n  category: string;\n  amount: number;\n}\n\nconst BillItem: FC<BillItemProps> = (props: BillItemProps) => {\n  const {\n    type,\n    time,\n    category,\n    amount\n  } = props\n\n  let sign = type === BillType.Income ? '+' : '-'\n  if (amount < 0) {\n    sign = ''\n  }\n\n  return (\n    <li className=\"bill-item list-group-item\">\n      <div className=\"category\">\n        {category}\n      </div>\n      <div className=\"time\">{time}</div>\n      <div className=\"amount\">{`${sign}${amount.toFixed(2)}`}</div>\n    </li>\n  )\n}\n\nexport default BillItem\n","import React, { FC } from 'react'\n\nconst Header: FC = () => (\n  <header className=\"header bg-dark\">\n    <nav className=\"navbar navbar-expand-lg container text-light\">\n      <span className=\"navbar-brand mb-0 h1\">Pocket Book</span>\n    </nav>\n  </header>\n)\n\nexport default Header\n","import React, { FC } from 'react'\n\nexport interface LoadingProps {\n  text?: string;\n}\n\nconst Loading: FC<LoadingProps> = (props: LoadingProps) => {\n  const { text } = props\n  return (\n    <div className=\"loading text-center\">\n      <div className=\"loading-icon\">\n        <div className=\"spinner-border\" />\n      </div>\n      {text && <span className=\"text\">{text}</span>}\n    </div>\n  )\n}\n\nLoading.defaultProps = {\n  text: '加载中...'\n}\n\nexport default Loading\n","import React, { FC } from 'react'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { faInbox } from '@fortawesome/free-solid-svg-icons'\n\nexport interface NodataProps {\n  text?: string;\n}\n\nconst NoData: FC<NodataProps> = (props: NodataProps) => {\n  const { text } = props\n\n  return (\n    <div className=\"no-data text-center my-3\">\n      <div className=\"icon text-black-50\">\n        <Icon icon={faInbox} size=\"6x\" />\n      </div>\n      <p className=\"text text-secondary\">{text}</p>\n    </div>\n  )\n}\n\nNoData.defaultProps = {\n  text: '暂无数据'\n}\n\nexport default NoData\n","interface FormateDateOption {\n  hasDay?: boolean\n}\n\nexport const formatDate = (date: Date, { hasDay = true }: FormateDateOption = {}): string => {\n  const year = date.getFullYear()\n  const month = `${date.getMonth() + 1}`.padStart(2, '0')\n\n  if (hasDay) {\n    const day = `${date.getDate()}`.padStart(2, '0')\n    return [year, month, day].join('-')\n  }\n\n  return [year, month].join('-')\n}\n\nexport const formatMonth = (date: Date): string => formatDate(date, { hasDay: false })\n","import React, { FC } from 'react'\nimport BillItem, { BillType } from './Item'\nimport Loading from '../Loading/loading'\nimport NoData from '../Nodata/noData'\nimport { formatDate } from '../../util'\nimport './_style.scss'\n\nexport interface BillDataItem {\n  id: string;\n  type: BillType;\n  time: number | string;\n  category: string;\n  categoryName: string;\n  amount: number | string;\n}\n\nexport interface BillListProps {\n  list: BillDataItem[];\n  loading?: boolean;\n}\n\nconst BillList: FC<BillListProps> = (props: BillListProps) => {\n  const { list, loading } = props\n\n  return (\n    <ul className=\"bill-list container list-group list-group-flush my-3 p-3 bg-white rounded shadow-sm\" data-testid=\"bill-list\">\n      {loading && <Loading />}\n      {!loading && list.length === 0 && (\n        <NoData />\n      )}\n      {\n        !loading && list.map((item: BillDataItem) => (\n          <BillItem\n            key={item.id}\n            amount={parseFloat(item.amount as string)}\n            type={item.type}\n            category={item.categoryName}\n            time={formatDate(new Date(item.time))}\n          />\n        ))\n      }\n    </ul>\n  )\n}\n\nexport default BillList\n","import axios from 'axios'\nimport { baseUrl } from './config'\n\nconst BillBaseUrl = `${baseUrl}/bill`\n\nexport interface BillParams {\n  time?: number;\n  category?: string;\n}\n\nexport const getBillList = (params: BillParams = {}) => {\n  const { time, category } = params\n\n  return axios.get(`${BillBaseUrl}/list`, {\n    params: {\n      time,\n      category\n    }\n  })\n}\n\nexport const getBillCategories = () => axios.get(`${BillBaseUrl}/categories`)\n\nexport interface AddBillBody {\n  time: number;\n  amount: number;\n  category: string;\n}\n\nexport const addBillItem = (data: AddBillBody) => (\n  axios.post(`${BillBaseUrl}/addItem`, {\n    ...data\n  })\n)\n","// eslint-disable-next-line import/prefer-default-export\nexport const baseUrl = process.env.NODE_ENV === 'production'\n  ? 'http://47.95.241.143:5000'\n  : 'http://localhost:5000'\n","import React, {\n  FC,\n  SelectHTMLAttributes,\n  useEffect,\n  useState\n} from 'react'\nimport { getBillCategories } from '../../api/bill'\nimport { BillType } from '../BillList/Item'\n\nexport type CategorySelectProps = SelectHTMLAttributes<HTMLSelectElement> & {\n  placeholderText?: string;\n  billType?: BillType;\n}\n\nexport interface CategoryItem {\n  id: string;\n  type: BillType;\n  name: string;\n}\n\nconst CategorySelect: FC<CategorySelectProps> = (props: CategorySelectProps) => {\n  const { placeholderText, billType, ...restProps } = props\n  const [cateList, setCateList] = useState<CategoryItem[]>([])\n\n  useEffect(() => {\n    getBillCategories()\n      .then((res) => {\n        setCateList(res.data)\n      })\n      .catch((err) => {\n        window.console.error(err)\n      })\n  }, [])\n\n  return (\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    <select {...restProps} data-testid=\"category-select\">\n      <option value=\"\">{placeholderText}</option>\n      {\n        cateList.map(({ id, name, type }) => {\n          if (billType) {\n            return billType === type\n              ? <option value={id} key={id}>{name}</option>\n              : null\n          }\n\n          return <option value={id} key={id}>{name}</option>\n        })\n      }\n    </select>\n  )\n}\n\nCategorySelect.defaultProps = {\n  placeholderText: '请选择分类'\n}\n\nexport default CategorySelect\n","import { createContext } from 'react'\nimport { BillType } from './components/BillList/Item'\nimport { BillParams } from './api/bill'\n\nexport interface BillSummary {\n  [BillType.Income]: number,\n  [BillType.Expenditure]: number\n}\n\nexport interface IBillContext {\n  loading?: boolean;\n  summary?: BillSummary;\n  category?: string;\n  changeCategory?: (category: string) => void;\n  month?: string;\n  changeMonth?: (month: string) => void;\n  getBillList?: (params: BillParams) => void;\n}\n\nexport const BillContext = createContext<IBillContext>({})\n","import React, {\n  FC,\n  ChangeEvent,\n  useContext\n} from 'react'\nimport classNames from 'classnames'\nimport DatePicker from 'react-datepicker'\nimport CategorySelect from '../CategorySelect/categorySelect'\nimport { formatMonth } from '../../util'\nimport { BillContext } from '../../context'\nimport { BillParams } from '../../api/bill'\n\nexport interface FilterProps {\n  className?: string\n}\n\nconst Filter: FC<FilterProps> = (props: FilterProps) => {\n  const { className } = props\n  const classes = classNames('form-inline', className)\n\n  const context = useContext(BillContext)\n  const {\n    loading,\n    month,\n    category,\n    changeMonth,\n    changeCategory,\n    getBillList\n  } = context\n\n  const handleFormChange = () => {\n    if (getBillList) {\n      const parmas: BillParams = {\n        time: month ? new Date(month).getTime() : undefined,\n        category\n      }\n\n      getBillList(parmas)\n    }\n  }\n\n  const handleDateChange = (date: Date) => {\n    if (changeMonth) {\n      changeMonth(formatMonth(date))\n      handleFormChange()\n    }\n  }\n\n  const handleCategoryChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target\n    if (changeCategory) {\n      changeCategory(value)\n      handleFormChange()\n    }\n  }\n\n  return (\n    <div className={classes} data-testid=\"test-filter\">\n      <div className=\"form-row align-items-left\">\n        <div className=\"form-group mx-2\">\n          <label htmlFor=\"filter-month\">月份</label>\n          <DatePicker\n            onChange={handleDateChange}\n            className=\"form-control mx-sm-3\"\n            value={month}\n            showMonthYearPicker\n            maxDate={new Date()}\n            id=\"filter-month\"\n          />\n        </div>\n        <div className=\"form-group mx-2\">\n          <label htmlFor=\"filter-category\">分类</label>\n          <CategorySelect\n            className=\"form-control mx-sm-3\"\n            placeholderText=\"全部\"\n            value={category}\n            onChange={handleCategoryChange}\n            disabled={loading}\n            id=\"filter-category\"\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition'\n\ntype AnimationName = 'zoom-in-top' | 'zoom-in-left' | 'zoom-in-bottom' | 'zoom-in-right' | 'fade-in' | 'slide-in-top'\n\ntype TransitionProps = CSSTransitionProps & {\n  animation?: AnimationName,\n  wrapper?: boolean,\n}\n\nconst Transition: React.FC<TransitionProps> = (props: TransitionProps) => {\n  const {\n    children,\n    className,\n    animation,\n    wrapper,\n    ...restProps\n  } = props\n  const nodeRef = React.useRef(null)\n\n  return (\n    <CSSTransition\n      nodeRef={nodeRef}\n      classNames={className || animation}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...restProps}\n    >\n      <div ref={nodeRef}>\n        {children}\n      </div>\n    </CSSTransition>\n  )\n}\nTransition.defaultProps = {\n  unmountOnExit: true,\n  appear: true\n}\n\nexport default Transition\n","import React, { FC } from 'react'\nimport ReactDOM from 'react-dom'\nimport Transition from '../Transition/transiton'\n\nexport interface MaskProps {\n  visible: boolean;\n}\n\nconst Mask: FC<MaskProps> = (props: MaskProps) => {\n  const {\n    visible\n  } = props\n\n  return ReactDOM.createPortal(\n    (\n      <Transition\n        in={visible}\n        timeout={300}\n        animation=\"fade-in\"\n      >\n        <div className=\"modal-backdrop show\" />\n      </Transition>\n    ),\n    document.body\n  )\n}\n\nexport default Mask\n","import React, {\n  FC,\n  CSSProperties,\n  MouseEvent,\n  ReactNode,\n  useEffect\n} from 'react'\nimport classNames from 'classnames'\nimport Transition from '../Transition/transiton'\nimport Mask from './mask'\n\nexport type ModalSize = 'lg' | 'sm'\n\nexport interface ModalProps {\n  visible: boolean;\n  children: ReactNode;\n  closable?: boolean;\n  showFooter?: boolean;\n  title?: string;\n  cancelText?: string;\n  okText?: string;\n  center?: boolean;\n  modalSize?: ModalSize;\n  onOk?: (e: MouseEvent<HTMLButtonElement>) => void;\n  onCancel?: (e: MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Modal: FC<ModalProps> = (props: ModalProps) => {\n  const {\n    visible,\n    children,\n    closable,\n    title,\n    cancelText,\n    okText,\n    showFooter,\n    modalSize,\n    center,\n    onOk,\n    onCancel\n  } = props\n\n  useEffect(() => {\n    if (visible) {\n      document.body.classList.add('modal-open')\n    } else {\n      document.body.classList.remove('modal-open')\n    }\n  }, [visible])\n\n  const styles: CSSProperties = {\n    display: 'block',\n    pointerEvents: visible ? 'unset' : 'none'\n  }\n\n  const handleOk = (e: MouseEvent<HTMLButtonElement>) => {\n    if (onOk) {\n      onOk(e)\n    }\n  }\n\n  const handleCancel = (e: MouseEvent<HTMLButtonElement>) => {\n    if (onCancel) {\n      onCancel(e)\n    }\n  }\n\n  const modalClasses = classNames('modal', {\n    visible\n  })\n\n  const dialogClasses = classNames('modal-dialog', {\n    [`modal-${modalSize}`]: !!modalSize,\n    'modal-dialog-centered': center\n  })\n\n  const renderHeader = (modalTitle: string, modalClosable: boolean): ReactNode => {\n    if (!modalTitle && !modalClosable) {\n      return null\n    }\n    return (\n      <div className=\"modal-header\">\n        <div className=\"modal-title\">{title}</div>\n        {\n          modalClosable\n          && (\n            <button type=\"button\" className=\"close\" onClick={handleCancel}>\n              <span>×</span>\n            </button>\n          )\n        }\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <div className={modalClasses} style={styles} data-testid=\"test-modal\">\n        <Transition\n          in={visible}\n          timeout={300}\n          animation=\"zoom-in-top\"\n        >\n          <div className={dialogClasses}>\n            <div className=\"modal-content\">\n              {renderHeader(title as string, closable as boolean)}\n              <div className=\"modal-body\">{children}</div>\n              {\n                showFooter\n                  && (\n                    <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-secondary\" onClick={handleCancel}>{cancelText}</button>\n                      <button type=\"button\" className=\"btn btn-primary\" onClick={handleOk}>{okText}</button>\n                    </div>\n                  )\n              }\n            </div>\n          </div>\n        </Transition>\n      </div>\n      <Mask visible={visible} />\n    </>\n  )\n}\n\nModal.defaultProps = {\n  closable: true,\n  showFooter: true,\n  cancelText: 'Cancel',\n  okText: 'OK'\n}\n\nexport default Modal\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { TransitionGroup } from 'react-transition-group'\nimport Transition from '../Transition/transiton'\nimport Message, { MessageType } from './msg'\nimport './_style.scss'\n\nexport interface MessageApi {\n  info: (text: string) => void;\n  success: (text: string) => void;\n  warning: (text: string) => void;\n  error: (text: string) => void;\n}\n\nexport interface Notice {\n  text: string;\n  key: string;\n  type: MessageType;\n}\n\nlet seed = 0\nconst now = Date.now()\nconst getUuid = (): string => {\n  const id = seed\n  seed += 1\n  return `MESSAGE_${now}_${id}`\n}\n\nlet add: (notice: Notice) => void\n\nexport const MessageContainer = () => {\n  const [notices, setNotices] = useState<Notice[]>([])\n  const timeout = 3 * 1000\n  const maxCount = 10\n\n  const remove = (notice: Notice) => {\n    const { key } = notice\n\n    setNotices((prevNotices) => (\n      prevNotices.filter(({ key: itemKey }) => key !== itemKey)\n    ))\n  }\n\n  add = (notice: Notice) => {\n    setNotices((prevNotices) => [...prevNotices, notice])\n\n    setTimeout(() => {\n      remove(notice)\n    }, timeout)\n  }\n\n  useEffect(() => {\n    if (notices.length > maxCount) {\n      const [firstNotice] = notices\n      remove(firstNotice)\n    }\n  }, [notices])\n\n  return (\n    <div className=\"message-container\">\n      <TransitionGroup>\n        {\n          notices.map(({ text, key, type }) => (\n            <Transition\n              timeout={200}\n              in\n              animation=\"slide-in-top\"\n              key={key}\n            >\n              <Message type={type} text={text} />\n            </Transition>\n          ))\n        }\n      </TransitionGroup>\n    </div>\n  )\n}\n\nlet el = document.querySelector('#message-wrapper')\nif (!el) {\n  el = document.createElement('div')\n  el.className = 'message-wrapper'\n  el.id = 'message-wrapper'\n  document.body.append(el)\n}\n\nReactDOM.render(\n  <MessageContainer />,\n  el\n)\n\nconst api: MessageApi = {\n  info: (text) => {\n    add({\n      text,\n      key: getUuid(),\n      type: 'info'\n    })\n  },\n  success: (text) => {\n    add({\n      text,\n      key: getUuid(),\n      type: 'success'\n    })\n  },\n  warning: (text) => {\n    add({\n      text,\n      key: getUuid(),\n      type: 'warning'\n    })\n  },\n  error: (text) => {\n    add({\n      text,\n      key: getUuid(),\n      type: 'danger'\n    })\n  }\n}\n\nexport default api\n","import React, {\n  FC,\n  useState,\n  ChangeEvent,\n  FocusEvent,\n  FormEvent\n} from 'react'\nimport classNames from 'classnames'\nimport { AxiosResponse, AxiosError } from 'axios'\nimport DatePicker from 'react-datepicker'\nimport CategorySelect from '../CategorySelect/categorySelect'\nimport { formatDate } from '../../util'\nimport { addBillItem } from '../../api/bill'\nimport './_style.scss'\n\nexport type BillFieldElement = HTMLInputElement | HTMLSelectElement\n\nexport type BillFieldName = 'category' | 'amount' | 'date'\n\nexport type BillFormFields = {\n  [key in BillFieldName]: string\n}\n\nexport type BillFormError = BillFormFields\n\nexport interface BillFormProps {\n  onFinish?: (form: BillFormFields, res: AxiosResponse) => void;\n  onFail?: (form: BillFormFields, err: AxiosError) => void;\n}\n\nconst BillForm: FC<BillFormProps> = (props: BillFormProps) => {\n  const { onFinish, onFail } = props\n  const [form, setForm] = useState<BillFormFields>({\n    category: '',\n    amount: '',\n    date: formatDate(new Date())\n  })\n\n  const [formErr, setFormErr] = useState<BillFormError>({\n    category: '',\n    amount: '',\n    date: ''\n  })\n\n  const [loading, setLoading] = useState(false)\n\n  const handleChange = (e: ChangeEvent<BillFieldElement>) => {\n    const { value, name } = e.currentTarget\n    setForm({\n      ...form,\n      [name]: value\n    })\n\n    setFormErr({\n      ...formErr,\n      [name]: ''\n    })\n\n    if (name === 'amount') {\n      const amountReg = /(^(-[1-9]|[1-9])\\d*(\\.?\\d{1,2})?$)|(^(0|-0)\\.(\\d[1-9]|[1-9]))$/\n\n      if (!amountReg.test(value)) {\n        setFormErr({\n          ...formErr,\n          [name]: '请输入数字（可精确到小数点后两位）'\n        })\n      }\n    }\n  }\n\n  const handleDateChange = (date: Date) => {\n    setForm({\n      ...form,\n      date: formatDate(date)\n    })\n  }\n\n  const handleFocus = (e: FocusEvent<BillFieldElement>) => {\n    const { name, value } = e.currentTarget\n    const fieldName = name as BillFieldName\n\n    if (formErr[fieldName] && !value) {\n      setFormErr({\n        ...formErr,\n        [name]: ''\n      })\n    }\n  }\n\n  const validate = (): boolean => {\n    let passValidate = !Object.values(formErr).some((errMsg) => errMsg !== '')\n\n    Object.entries(form).forEach(([key, value]) => {\n      if (value === '') {\n        passValidate = false\n        setFormErr((prevFormErr) => ({\n          ...prevFormErr,\n          [key]: '该项不能为空'\n        }))\n      }\n    })\n\n    return passValidate\n  }\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault()\n    if (validate()) {\n      const { category, date, amount } = form\n      const time = new Date(date).getTime()\n      setLoading(true)\n      addBillItem({\n        category,\n        time,\n        amount: parseFloat(amount)\n      }).then((res) => {\n        if (onFinish) {\n          onFinish(form, res as AxiosResponse)\n        }\n      }).catch((err) => {\n        if (onFail) {\n          onFail(form, err as AxiosError)\n        }\n      }).finally(() => {\n        setLoading(false)\n      })\n    }\n  }\n\n  return (\n    <form className=\"bill-form\" onSubmit={handleSubmit} noValidate data-testid=\"test-bill-form\">\n      <div className=\"form-group\">\n        <label htmlFor=\"add-category\">分类</label>\n        <CategorySelect\n          id=\"add-category\"\n          className={classNames('custom-select', {\n            'is-invalid': !!formErr.category\n          })}\n          name=\"category\"\n          value={form.category}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          disabled={loading}\n        />\n        <div className=\"invalid-feedback\">\n          {formErr.category}\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"date\">\n          日期\n        </label>\n        <div\n          className={classNames({\n            'is-invalid': !!formErr.date\n          })}\n        >\n          <DatePicker\n            className={classNames('form-control', {\n              'is-invalid': !!formErr.date\n            })}\n            id=\"date\"\n            name=\"date\"\n            maxDate={new Date()}\n            required\n            value={form.date}\n            onChange={handleDateChange}\n            onFocus={handleFocus}\n            disabled={loading}\n          />\n        </div>\n        <div className=\"invalid-feedback\">\n          {formErr.date}\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"amount\">金额</label>\n        <input\n          className={classNames('form-control', {\n            'is-invalid': !!formErr.amount\n          })}\n          type=\"text\"\n          id=\"amount\"\n          name=\"amount\"\n          required\n          value={form.amount}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          disabled={loading}\n        />\n        <div className=\"invalid-feedback\">\n          {formErr.amount}\n        </div>\n      </div>\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary\"\n        disabled={loading}\n      >\n        {\n        loading\n          ? (\n            <>\n              <span className=\"spinner-border spinner-border-sm mr-2\" />\n              正在提交...\n            </>\n          )\n          : '提交'\n        }\n      </button>\n    </form>\n  )\n}\n\nexport default BillForm\n","import React, { FC, ReactElement } from 'react'\nimport { FontAwesomeIcon as Icon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome'\nimport {\n  IconDefinition,\n  faInfoCircle,\n  faCheckCircle,\n  faTimesCircle,\n  faExclamationCircle\n} from '@fortawesome/free-solid-svg-icons'\n\nexport type MessageType = 'info' | 'success' | 'danger' | 'warning'\n\nexport interface MessageProps {\n  text: string;\n  type: MessageType\n}\n\nconst Message: FC<MessageProps> = (props: MessageProps) => {\n  const { text, type } = props\n\n  const renderIcon = (messageType: MessageType): ReactElement<FontAwesomeIconProps> => {\n    let messageIcon: IconDefinition\n\n    switch (messageType) {\n      case 'success':\n        messageIcon = faCheckCircle\n        break\n      case 'danger':\n        messageIcon = faTimesCircle\n        break\n      case 'warning':\n        messageIcon = faExclamationCircle\n        break\n      case 'info':\n      default:\n        messageIcon = faInfoCircle\n        break\n    }\n\n    return <Icon icon={messageIcon} className={`text-${messageType}`} />\n  }\n\n  return (\n    <div className=\"message my-2 text-center\" data-testid=\"test-message\">\n      <div className=\"message-content d-inline-flex bg-white px-4 py-2 shadow\">\n        <div className=\"icon mr-2\">\n          {renderIcon(type)}\n        </div>\n        <div className=\"text\">\n          {text}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Message\n","import React, { FC, useState, useContext } from 'react'\nimport classNames from 'classnames'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport Modal from '../Modal/modal'\nimport BillForm, { BillFormFields } from '../BillForm/billForm'\nimport message from '../Message'\nimport { BillContext } from '../../context'\nimport { formatMonth } from '../../util'\n\ninterface BillAdderProps {\n  className?: string;\n}\n\nconst BillAdder: FC<BillAdderProps> = (props: BillAdderProps) => {\n  const { className } = props\n  const [showModal, setShowModal] = useState(false)\n  const context = useContext(BillContext)\n  const { loading } = context\n\n  const classes = classNames('bill-adder', className)\n\n  const onAddBtnClick = () => {\n    setShowModal((prevShowModal) => !prevShowModal)\n  }\n\n  const handleModalCancel = () => {\n    setShowModal(false)\n  }\n\n  const handleFormSuccess = (form: BillFormFields) => {\n    setShowModal(false)\n    message.success('添加成功！')\n    const { date } = form\n    const { changeMonth, getBillList } = context\n    const month = formatMonth(new Date(date))\n    if (changeMonth) {\n      changeMonth(month)\n    }\n    if (getBillList) {\n      const time = new Date(month).getTime()\n      getBillList({ time })\n    }\n  }\n\n  const handleFormFail = () => {\n    setShowModal(false)\n    message.error('添加失败，请稍后重试。')\n  }\n\n  return (\n    <div className={classes} data-testid=\"bill-adder\">\n      <button\n        className=\"btn btn-dark\"\n        type=\"button\"\n        onClick={onAddBtnClick}\n        disabled={loading}\n      >\n        <Icon icon={faPlus} className=\"mr-1\" />\n        添加账单\n      </button>\n      <Modal\n        visible={showModal}\n        onCancel={handleModalCancel}\n        showFooter={false}\n        okText=\"确定\"\n        cancelText=\"取消\"\n        title=\"添加账单\"\n      >\n        <BillForm\n          onFinish={handleFormSuccess}\n          onFail={handleFormFail}\n        />\n      </Modal>\n    </div>\n  )\n}\n\nexport default BillAdder\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React, { FC, useContext } from 'react'\nimport { BillContext, BillSummary } from '../../context'\nimport { BillType } from '../BillList/Item'\n\nexport interface SummaryProps {\n  income: string | number;\n  expenditure: string | number;\n}\n\nconst { Income, Expenditure } = BillType\n\nconst Summary: FC = () => {\n  const context = useContext(BillContext)\n  const { summary } = context\n  const { [Income]: income, [Expenditure]: expenditure } = summary as BillSummary\n  const incomeAmount = income.toFixed(2)\n  const expenditureAmount = expenditure.toFixed(2)\n\n  const sum = income - expenditure\n  const sumSign = sum > 0 ? '+' : ''\n  const sumStr = `${sumSign}${sum.toFixed(2)}`\n\n  return (\n    <div className=\"summary d-block d-md-flex\" data-testid=\"test-summary\">\n      <div className=\"income mx-2\">\n        <span className=\"font-weight-bold\">收入：</span>\n        <span className=\"income-amount\">{incomeAmount}</span>\n      </div>\n      <div className=\"expenditure mx-2\">\n        <span className=\"font-weight-bold\">支出：</span>\n        <span className=\"expenditure-amount\">{expenditureAmount}</span>\n      </div>\n      <div className=\"sum mx-2\">\n        <span className=\"font-weight-bold\">总计：</span>\n        <span className=\"sum-amount\">{sumStr}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Summary\n","import React, { FC } from 'react'\nimport Filter from '../Filter/filter'\nimport BillAdder from '../BillAdder'\nimport Summary from '../Summary/summary'\n\nconst ToolBar: FC = () => (\n  <div className=\"tool-bar container my-3 p-3 bg-light bg-white rounded shadow-sm d-lg-flex justify-content-between align-items-center\">\n    <Filter className=\"mb-0 mb-md-2 mb-lg-0\" />\n    <BillAdder className=\"mb-2 mb-lg-0\" />\n    <Summary />\n  </div>\n)\n\nexport default ToolBar\n","import React, { FC, useState } from 'react'\nimport Header from './components/Header/header'\nimport List, { BillDataItem } from './components/BillList/BillLlist'\nimport { BillType } from './components/BillList/Item'\nimport ToolBar from './components/ToolBar/toolBar'\nimport { getBillList, BillParams } from './api/bill'\nimport { formatDate } from './util'\nimport { BillContext, IBillContext, BillSummary } from './context'\n\nconst App: FC = () => {\n  const [loading, setLoading] = useState(false)\n  const [list, setList] = useState<BillDataItem[]>([])\n  const [category, setCategory] = useState('')\n  const nowMonth = formatDate(new Date(), { hasDay: false })\n  const [month, setMonth] = useState(nowMonth)\n  const [summary, setSummary] = useState <BillSummary>({\n    [BillType.Income]: 0,\n    [BillType.Expenditure]: 0\n  })\n\n  const requestBillList = (params: BillParams = {}) => {\n    setLoading(true)\n    getBillList(params)\n      .then((res) => {\n        const { list: billList, typeSummary } = res.data\n        setList(billList)\n        setSummary(typeSummary)\n      })\n      .catch((err) => {\n        window.console.error(err)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  const passedContext: IBillContext = {\n    loading,\n    summary,\n    category,\n    changeCategory: setCategory,\n    month,\n    changeMonth: setMonth,\n    getBillList: requestBillList\n  }\n\n  return (\n    <div className=\"App bg-light\" data-testid=\"test-app\">\n      <Header />\n      <BillContext.Provider value={passedContext}>\n        <ToolBar />\n        <List list={list} loading={loading} />\n      </BillContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}